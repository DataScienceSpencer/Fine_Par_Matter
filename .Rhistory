hist(datasetSEL$Global_active_power,
col="red",
ylim=c(0,1200),
main="Global Active Power",
xlab="Global Actie Power (kilowats)")
?device
png("rplot1.png", width=480, height=480)
hist(datasetSEL$Global_active_power,
col="red",
ylim=c(0,1200),
main="Global Active Power",
xlab="Global Actie Power (kilowats)")
dev.off()
png("rplot1.png", width=480, height=480)
hist(datasetSEL$Global_active_power,
col="red",
ylim=c(0,1200),
main="Global Active Power",
xlab="Global Actie Power (kilowats)")
dev.off()
png("rplot1.png", width=480, height=480)
print(hist(datasetSEL$Global_active_power,
col="red",
ylim=c(0,1200),
main="Global Active Power",
xlab="Global Actie Power (kilowats)"))
dev.off()
png("test.png", width=480, height=480)
print(hist(datasetSEL$Global_active_power,
col="red",
ylim=c(0,1200),
main="Global Active Power",
xlab="Global Actie Power (kilowats)"))
dev.off()
(hist(datasetSEL$Global_active_power,
col="red",
ylim=c(0,1200),
main="Global Active Power",
xlab="Global Actie Power (kilowats)")
rug(datasetSEL$Global_active_power)
rug(datasetSEL$Global_active_power)
par( mfrow = c( 2, 2 ) )
plot(datasetSEL$Global_active_power, type="l",
ylab="Global Active Power (kilowats)", xlab=""))
plot(datasetSEL$Sub_metering_1, type="s", ylab="Energy sub metering",xlab=""))
lines(datasetSEL$Sub_metering_2, type="s", col="red")
lines(datasetSEL$Sub_metering_3, type="s", col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
pch="-", col=c("black", "red", "blue"))
par( mfrow = c( 2, 2 ) )
plot(datasetSEL$Global_active_power, type="l",
ylab="Global Active Power (kilowats)", xlab="")
plot(datasetSEL$Sub_metering_1, type="s", ylab="Energy sub metering",xlab=""))
lines(datasetSEL$Sub_metering_2, type="s", col="red")
lines(datasetSEL$Sub_metering_3, type="s", col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
pch="-", col=c("black", "red", "blue"))
plot(datasetSEL$Global_active_power, type="l",
ylab="Global Active Power (kilowats)", xlab="")
par( mfrow = c( 2, 2 ) )
plot(datasetSEL$Global_active_power, type="l",
ylab="Global Active Power (kilowats)", xlab="")
plot(datasetSEL$Sub_metering_1, type="s", ylab="Energy sub metering",xlab=""))
plot(datasetSEL$Sub_metering_1, type="s", ylab="Energy sub metering",xlab="")
lines(datasetSEL$Sub_metering_2, type="s", col="red")
lines(datasetSEL$Sub_metering_3, type="s", col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
pch="-", col=c("black", "red", "blue"))
plot(datasetSEL$Voltage, type="l",
ylab="Global Active Power (kilowats)", xlab="")
plot(datasetSEL$Global_reactive_power, type="l",
ylab="Voltage", xlab="")
par( mfrow = c( 2, 2 ) )
## Plot 1: Global Active Power
plot(datasetSEL$Global_active_power, type="l",
ylab="Global Active Power (kilowats)", xlab="")
## Plot 2: Voltage
plot(datasetSEL$Voltage, type="l",
ylab="Voltage", xlab="")
## Plot 3: Energy sub metering
plot(datasetSEL$Sub_metering_1, type="s", ylab="Energy sub metering",xlab="")
lines(datasetSEL$Sub_metering_2, type="s", col="red")
lines(datasetSEL$Sub_metering_3, type="s", col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
pch="-", col=c("black", "red", "blue"))
## Plot 4: Global Reactive Power
plot(datasetSEL$Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="")
## Define the peramaters to plot in two rows and columns
png("plot4.png", width=480, height=480)
print(par( mfrow = c( 2, 2 ) ))
## Plot 1: Global Active Power
plot(datasetSEL$Global_active_power, type="l",
ylab="Global Active Power (kilowats)", xlab="")
## Plot 2: Voltage
plot(datasetSEL$Voltage, type="l",
ylab="Voltage", xlab="")
## Plot 3: Energy sub metering
plot(datasetSEL$Sub_metering_1, type="s", ylab="Energy sub metering",xlab="")
lines(datasetSEL$Sub_metering_2, type="s", col="red")
lines(datasetSEL$Sub_metering_3, type="s", col="blue")
legend("topright", legend =c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
pch="-", col=c("black", "red", "blue"))
## Plot 4: Global Reactive Power
plot(datasetSEL$Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, ratings)
data(movies)
qplot(votes, ratings)
qplot(votes, ratings, data=movies)
qplot(votes, rating, data=movies)
qplot(votes, rating, data=movies) + stat_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
?qplot
qplot(votes, rating, data = movies) + geom_smooth()
head(movies$title)
library(ggplo2)
library(ggplot2)
?ggplot2
?multiplot
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
?multiplot
install.packages("http://peterhaschke.com/Code/multiplot.R")
library(multiplot)
dat <- read.csv("NRI71415_restruc.csv")
dat2006 <- subset(dat, Year > 2006)
dat <- read.csv("NRI71415_restruc.csv")
dat2006 <- subset(dat, Year > 2006)
ggplot(dat2006$Year, aes(x=dat2006$Rate, colour=Rate)) +
geom_density() +
ggtitle("Final weight, by diet")
dat2006$Year <- as.numeric(dat2006$Year)
ggplot(dat2006$Year, aes(x=dat2006$Rate, colour=Rate)) +
geom_density() +
ggtitle("Final weight, by diet")
labrary(lattice)
library(lattice)
xyplot(dat2006$Year ~ dat2006$Rate | State)
xyplot(dat2006$Year ~ dat2006$Rate | dat2006$State)
ggplot(dat2006$Year, aes(x=dat2006$Rate, colour=index)) +
geom_density() +
ggtitle("Final weight, by diet")
ggplot(dat2006$Year, aes(x=dat2006$Rate, colour=index)
xyplot(dat2006$Year ~ dat2006$Rate | dat2006$State))
ggplot(dat2006$Year, aes(x=dat2006$Rate, colour=index))
ggplot2(dat2006$Year, aes(x=dat2006$Rate, colour=index))
ggplot(dat2006$Year, aes(x=dat2006$Rate, col=index))
dat <- read.csv("NRI71415_restruc.csv")
dat2006 <- subset(dat, Year > 2006)
xyplot(dat2006$Year ~ dat2006$Rate | dat2006$index))
xyplot(dat2006$Year ~ dat2006$Rate | dat2006$index)
xyplot(dat2006$Year ~ dat2006$Rate | dat2006$Index)
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index)
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
pannel.abline(h=median(y))
}
)
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
pannel.abline(h=median(y), lyt=2)
})
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.abline(h=median(y), lyt=2)
})
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.abline(h=median(y), lty=2)
})
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.abline(h=mean(y), lty=2)
})
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.abline(h=mean(y))
})
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, {
panel.xyplot(x,y, ...)
panel.abline(h=mean(y))
})
?abline
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.abline(h=median(x))
})
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.mean(x)
})
?mean
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.abline(h=mean(x))
})
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.linejoin(x, y, horizontal = FALSE, ...)
panel.abline(h=mean(x))
})
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.linejoin(x, y, horizontal = FALSE, ...)
panel.abline(h=mean(x))
}
xlab = "Year",
ylab = "Rate of EBP"))
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.linejoin(x, y, horizontal = FALSE, ...)
panel.abline(h=mean(x))
}
xlab = "Year",
ylab = "Rate of EBP")
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.linejoin(x, y, horizontal = FALSE, ...)
panel.abline(h=mean(x))
}
xlab = "Year",
ylab = "Rate of EBP"
)
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.linejoin(x, y, horizontal = FALSE, ...)
panel.abline(h=mean(x))
},
xlab = "Year",
ylab = "Rate of EBP"
)
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.linejoin(x, y, horizontal = FALSE, ...)
panel.abline(h=mean(x))
},
xlab = "Year",
ylab = "Rate of EBP",
col = "red"
)
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.linejoin(x, y, horizontal = FALSE, ...)
panel.abline(h=mean(x))
},
xlab = "Year",
ylab = "Rate of EBP",
)
??panel.abline
xyplot(dat2006$Rate ~ dat2006$Year | dat2006$Index, panel=function(x,y, ...) {
panel.xyplot(x,y, ...)
panel.linejoin(x, y, horizontal = FALSE, ...)
panel.abline(h = mean(x))
},
xlab = "Year",
ylab = "Rate of EBP",
)
ggplot(dat2006$Year, aes(x=dat2006$Rate, col=Index)) +
geom_density() +
ggtitle("Final weight, by diet")
ggplot(dat2006, aes(x=dat2006$Rate, y=dat2006$Year, col=Index)) +
geom_density() +
ggtitle("Final weight, by diet")
ggplot(dat2006, aes(x=dat2006$Rate, y=dat2006$Year, col=dat2006$Index)) +
geom_density() +
ggtitle("Final weight, by diet")
?ggplot
ggplot(dat2006, aes(x=dat2006$Rate, y=dat2006$Year, colour=dat2006$Index)) +
geom_density() +
ggtitle("Final weight, by diet")
ggplot(Rate, Year, data=dat2006)
ggplot(data = dat2006, Rate, Year)
ggplot(dat2006$Rate, dat2006$Year)
ggplot(dat2006, aes(dat2006$Rate, dat2006$Year))
qplot(dat2006$Rate, dat2006$Year, col="Index")
qplot(dat2006$Rate, dat2006$Year, col=Index)
qplot(dat2006$Rate, dat2006$Year, col=dat2006$Index1)
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1)
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1) +
stat_summary(fun.y=mean, colour="red", geom="point")
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1) +
stat_summary(fun.y=mean, colour="red", geom="line")
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1) +
stat_summary(fun.y=mean, colour="dat2006$Index1", geom="line")
ggplot(dat2006, aes(x=dat2006$Rate, y=dat2006$Year, colour=dat2006$Index))
ggplot(dat2006, aes(x=dat2006$Rate, y=dat2006$Year))
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1)
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1, geom = c("point", "smooth"))
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1, geom = c("point", "line"))
ggplot(dat2006, aes(dat2006$Rate, dat2006$Year))
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1, geom = c("point", "line")) +
stat_summary(fun.y=mean, colour="dat2006$Index1", geom="line")
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1, geom = c("point", "line"))
qplot(dat2006$Year, dat2006$Rate, col=dat2006$Index1, geom = c("point", "smooth"))
ggplot(dat2006, aes(Rate, Year))
dat2006$Rate <- as.numeric(dat2006$Rate, na.rm=T)
ggplot(dat2006, aes(Rate, Year))
dat2006$Year <- as.numeric(dat2006$Year, na.rm=T)
dat2006$Rate <- as.numeric(dat2006$Rate, na.rm=T)
ggplot(dat2006, aes(Rate, Year))
ggplot(dat2006, aes(Rate, Year)) + geom_point()
ggplot(dat2006, aes(x=dat2006$Rate, y=dat2006$Year, colour=dat2006$Index)) +
geom_density()
ggplot(dat2006, aes(x=dat2006$Rate, y=dat2006$Year, colour=dat2006$Index)) +
geom_point()
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Date, colour=dat2006$Index)) +
geom_point()
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Date, colour=dat2006$Index)) +
geom_point()
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point()
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_density() +
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point(alpha=.3) +
geom_smooth(alpha=.2, size=1) +
ggtitle("Final weight, by diet")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(size=1) +
f
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(size=1)
?geom_smooth
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(alpha=.3, size=1)
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth() +
ggtitle("Average EBP Rate Over Time")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth() +
ggtitle("Average EBP Rate Over Time") +
ylab("Test")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth() +
ggtitle("Average EBP Rate Over Time") +
ylab("Rate") +
xlab ("Year")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(size=.5) +
ggtitle("Average EBP Rate Over Time") +
ylab("Rate") +
xlab ("Year")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(size=.01) +
ggtitle("Average EBP Rate Over Time") +
ylab("Rate") +
xlab ("Year")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(alpha=.001) +
ggtitle("Average EBP Rate Over Time") +
ylab("Rate") +
xlab ("Year")
dat <- read.csv("NRI71415_restruc.csv")
dat2006 <- subset(dat, Year > 2006)
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(alpha=.001) +
ggtitle("Average EBP Rate Over Time") +
ylab("Rate") +
xlab ("Year")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(alpha=.001) +
ggtitle("Average EBP Rate Over Time") +
ylim(0.4) +
ylab("Rate") +
xlab ("Year")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(alpha=.001) +
ggtitle("Average EBP Rate Over Time") +
ylim(0, 0.4) +
ylab("Rate") +
xlab ("Year")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, colour=dat2006$Index)) +
geom_point() +
geom_smooth(alpha=.001) +
ggtitle("Average EBP Rate Over Time") +
ylim(0, 0.25) +
ylab("Rate") +
xlab ("Year")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, shape=dat2006$Index)) +
geom_point() +
geom_smooth(alpha=.001) +
ggtitle("Average EBP Rate Over Time") +
ylim(0, 0.25) +
ylab("Rate") +
xlab ("Year")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, col=dat2006$Index)) +
geom_point() +
geom_smooth(alpha=.001) +
ggtitle("Average EBP Rate Over Time") +
ylim(0, 0.25) +
ylab("Rate") +
xlab ("Year")
ggplot(dat2006, aes(x=dat2006$Year, y=dat2006$Rate, col=dat2006$Index)) +
geom_point() +
geom_smooth(alpha=.001) +
ggtitle("Average EBP Rate Over Time") +
ylim(0, 0.1) +
ylab("Rate") +
xlab ("Year")
## Data load
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Select data in Baltimore and LA
NEI_balt_la <- subset(NEI,fips == "24510" | fips == "06037")
## Data load
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Select data in Baltimore and LA
NEI_balt_la <- subset(NEI,fips == "24510" | fips == "06037")
NEI <- readRDS("summarySCC_PM25.rds")
## Data load
NEI <- read.RDS("summarySCC_PM25.rds")
SCC <- read.RDS("Source_Classification_Code.rds")
setwd("C:\Users\Spencer\Desktop\datasciencecoursera\Fine_Par_Matter")
## Data load
NEI <- read.RDS("summarySCC_PM25.rds")
NEI <- readRDS("summarySCC_PM25.rds")
setwd("C:\Users\Spencer\Desktop\datasciencecoursera\Fine_Par_Matter")
setwd(C:\Users\Spencer\Desktop\datasciencecoursera\Fine_Par_Matter)
?setwd
setwd("C:/Users\Spencer\Desktop\datasciencecoursera\Fine_Par_Matter")
setwd("C:/Users/Spencer/Desktop/datasciencecoursera/Fine_Par_Matter")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI_balt_la <- subset(NEI,fips == "24510" | fips == "06037")
x <- ddply(NEIbalt, .(fips, year), summarize, freq=length(fips), tot=sum(Emissions))
x$year <- as.character(x$year)
library(plyr)
x <- ddply(NEIbalt, .(fips, year), summarize, freq=length(fips), tot=sum(Emissions))
x$year <- as.character(x$year)
x <- ddply(NEI_balt_la, .(fips, year), summarize, freq=length(fips), tot=sum(Emissions))
x$year <- as.character(x$year)
ggplot(x3, aes(year, tot)) +
geom_bar(aes(fill = fips), position = "dodge", stat="identity")
library(ggplot2)
ggplot(x3, aes(year, tot)) +
geom_bar(aes(fill = fips), position = "dodge", stat="identity")
ggplot(x, aes(year, tot)) +
geom_bar(aes(fill = fips), position = "dodge", stat="identity")
X$City <- x$fips
x$city [citys == "24510"] <- "Baltimore"
xity <- x$fips
x$city [city == "24510"] <- "Baltimore"
x$city[x$city == "24510"] <- "Baltimore"
x$city <- x$fips
x$city[x$city == "24510"] <- "Baltimore"
x$city[x$city == "06037"] <- "Los Angeles"
ggplot(x, aes(year, tot)) +
geom_bar(aes(fill = city), position = "dodge", stat="identity") +
ylab("PH25 Emissions") +
xlab("Year") +
ggtitle("PH25 Emissions Over Time by Type")
ggplot(x, aes(city, tot)) +
geom_bar(aes(fill = year), position = "dodge", stat="identity") +
ylab("PH25 Emissions") +
xlab("Year") +
ggtitle("PH25 Emissions Over Time by Location")
ggplot(x, aes(city, tot)) +
geom_bar(aes(fill = year), position = "dodge", stat="identity") +
ylab("PH25 Emissions") +
xlab("Location") +
ggtitle("PH25 Emissions Over Time by Location")
ggplot(x, aes(city, tot)) +
geom_bar(aes(fill = year), stat="identity") +
ylab("PH25 Emissions") +
xlab("Location") +
ggtitle("PH25 Emissions Over Time by Location")
ggplot(x, aes(city, tot)) +
geom_bar(aes(fill = year), position = "dodge") +
ylab("PH25 Emissions") +
xlab("Location") +
ggtitle("PH25 Emissions Over Time by Location")
ggplot(x, aes(city, tot)) +
geom_bar(aes(fill = year), position = "dodge", stat="identity") +
ylab("PH25 Emissions") +
xlab("Location") +
ggtitle("PH25 Emissions Over Time by Location")
png("Baltimore_LA.png")
ggplot(x, aes(city, tot)) +
geom_bar(aes(fill = year), position = "dodge", stat="identity") +
ylab("PH25 Emissions") +
xlab("Location") +
ggtitle("PH25 Emissions Over Time by Location")
dev.off()
